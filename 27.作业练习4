//作业7（release不能调试）
////输入一个数组，将数组内奇数放在数组前面
//#include<stdio.h>
//int main()
//{
//	int i = 0;
//	int j = 0;
//	int m = 1;
//	int n = 0;
//	int arr[10] = { 2,2,2,4,5,6,7,8,9,10 };
//	int arr1[10];
//	int sz = sizeof(arr) / sizeof(arr[0]);
//	for (i = 0; i < 10; i++)
//	{
//		if (arr[i] % 2 != 0)
//		{
//			arr1[j] = arr[i];
//			j++;
//		}
//		else
//		{
//			arr1[sz - m] = arr[i];
//			m++;
//		}
//	}
//	for (n = 0; n < sz; n++ )
//	{
//		printf("%d ", arr1[n]);
//	}
//}
//老师的算法
//从左边找一个偶数
//从右边开始找一个奇数
//找到2个进行交换
//#include<stdio.h>
//void move(int arr[], int sz)
//{
//	int left = 0;
//	int right = sz - 1;
//	while (left < right)
//	{
//		int tmp = 0;
//		if ((arr[left] % 2) == 0 && (arr[right] % 2) != 0)
//		{
//			tmp = arr[left];
//			arr[left] = arr[right];
//			arr[right] = tmp;
//		}
//		if ((arr[left] % 2) != 0)//只有当左边的数为奇数时我们才进行++如果是偶数我们就让他在那里等待一个奇数和他进行交换
//		{
//			left++;
//		}
//		if ((arr[right] % 2) == 0)//只有右边为偶数是我们才进行--，为奇数就在那里等待一个偶数和他进行交换
//		{
//			right--;
//		}
//	}
//}
//void move1(int* arr, int sz)
//{
//	int* left = arr;
//	int* right = arr + sz - 1;
//	while (left < right)
//	{
//		int tmp = 0;
//		if ((*left % 2) == 0 && (*right % 2) != 0)
//		{
//			tmp = *left;
//			*left = *right;
//			*right = tmp;
//		}
//		if ((left<right)&&(*left % 2) != 0)//只有当左边的数为奇数时我们才进行++如果是偶数我们就让他在那里等待一个奇数和他进行交换
//		{
//			left++;
//		}
//		if ((left<right)&&(*right % 2) == 0)//只有右边为偶数是我们才进行--，为奇数就在那里等待一个偶数和他进行交换
//		{
//			right--;
//		}
//	}
//}
//void move2(int arr[], int sz)
//{
//	int left = 0;
//	int right = sz - 1;
//	while (left < right)
//	{
//		while (arr[left] % 2 == 1)
//		{
//			left++;
//		}
//		while (arr[right] % 2 == 0)
//		{
//			right--;
//		}
//		if (left < right)
//		{
//			int tem = arr[left];
//			arr[left] = arr[right];
//			arr[right] = tem;
//		}
//	}
//}
//int main()
//{
//	int n = 0;
//	int arr[] = { 4,2,2,4,2,6,7,8,8,10 };
//	int sz = sizeof(arr) / sizeof(arr[0]);
//	move2(arr, sz);
//	for (n = 0; n < sz; n++ )
//	{
//		printf("%d ", arr[n]);
//	}
//}
//作业8
//#include<stdio.h>
//int main()
//{
//	//整型提升
//	unsigned char a = 200;//1100 1000=1111 1111 1111 1111 1111 1111 1100 1000=1111 1111 1111 1111 1111 1111 1100 0111=1000 0000 0000 0000 0000 0000 0011 1000=-56 
//	unsigned char b = 100;//0110 0100=0000 0000 0000 0000 0000 0000 0110 0100=100
//	unsigned char c = 0;//0000 0000
//	c = a + b;//0001 0010 1100=0010 0010=44
//	printf("%d %d", a + b, c);//300,44  
//}
//作业9(32位大端存储)
//#include<stdio.h>
//int main()
//{
//	unsigned int a = 0x1234;//（低位）00 00 12 34（高位）----（低地址）34 12 00 00（高位址）---小端存储
//	                        //                               （低地址）00 00 12 34（高地址）---大端存储
//	unsigned char b = *(unsigned char*)&a;//00 34十六进制
//	printf("%d", b);//0 52
//}
//作业10
//#include<stdio.h>
//#include<string.h>
//int main()
//{
//	char a[1000] = { 0 };
//	int i = 0;
//	for (i = 0; i < 1000; i++)
//	{
//		a[i] = -1 - i;
//	}
//	printf("%d",strlen(a));//-1--->-128-->127-->3-->2-->1-->0=255
//}
//作业11
//杨辉三角
//#include<stdio.h>
//int main()
//{
//	int arr[10][10] = { 0 };
//	int i = 0;
//	int j = 0;
//	for (i = 0; i < 10; i++)//将第一列赋值为1其他为0
//	{
//		arr[i][0] = 1;
//	}
//	for (i = 1; i < 10; i++)//确定打印行数
//	{
//		for (j = 1; j <= i; j++)
//		{
//			arr[i][j] = arr[i - 1][j - 1] + arr[i - 1][j];//a[2][1]=a[1][0]+a[1][1]
//		}
//	}
//	for (i = 0; i < 10; i++)
//	{
//		for (j = 0; j <= i; j++)
//		{
//			printf("%-5d", arr[i][j]);
//		}
//		printf("\n");
//	}
//}
//作业12
//一起谋杀案，4个嫌疑人
//a:不是我
//b:是c
//d:是d
//d:c在胡说
//3人为真一人为假
//#include<stdio.h>
//int main()
//{
//	//假设a,b,c,d为凶手为1  分别判断他们说的话真假
//	int killer = 0;
//	for (killer = 'a'; killer <= 'd'; killer++)
//	{
//		if ((killer != 'a') + (killer == 'c') + (killer == 'd') + (killer != 'd')==3)
//		{
//			printf("凶手为%c", killer);
//		}
//	}
//}
//作业13（赛马问题）
//36匹马6个跑道，没有计时器请赛马确定36匹马前3名，请问最少比赛几次
//分别进行一次比赛  再把第一名进行比赛  那么最厉害的马所在的组可能有比较厉害的存在  再让第一名所在前三名和第二名组前2，第三名比赛
//8次
//25屁马5个跑道前五名，分几次赛马
//10次
//作业14（烧香问题）
//有一种香，材质不均匀，但是每一根这样的香燃烧完1个小时，给你2根香确定一个15分钟时间段
//第一根香二边点燃，同时点燃第二根，第一个燃完时点燃第二根香的另一端
