/*
#include<stdio.h>
int main()
{
	int i = 1;
	int j = 0;
	int num = 1;
	scanf("%d", &j);
	for (i = 1; i <= j; i++)
	{
		num = num * i;
	}
	printf("%d", num);
}
*/
//采用函数递归
/*
#include<stdio.h>

int jiecheng(int i)
{
	int ret = 1;
	if (i < 0)
	{
		printf("输入数字错误\n");
		return 0;
	}
	else if (i == 1 || i == 0)
	{
		ret = 1;
	}
	else
	{
		ret = jiecheng(i - 1)*i;
	}
	return ret;
}
int main()
{
	int i = 1;
	int j = 0;
	scanf("%d", &i);
	j = jiecheng(i);
	printf("%d", j);
}
*/
//斐波那契数列
/*
#include<stdio.h>
 
int fib(int i)
{
	int count = 1;
	//if(i==3)//可以计算一下这样进行运算重复了多少次，所以计算较慢
	//{
	//	jm+;
	//}
	if (i <= 2)
	{
		count = 1;
	}
	else
	{
		count = fib(i - 1) + fib(i - 2);
	}
	return count;
}
int main()
{
	int i = 1;
	int j = 1;
	scanf("%d", &i);
	j = fib(i);
	printf("%d", j);
}
*/
//采用函数循环求斐波那契数\
//1 1 2 3 5 8 13 21 34
//a b c先a=1,b=1求出c=2，再a=1，b=2求出c=3，一直循环下去c=a+b a=b b=c
//汉诺塔问题和青蛙跳台问题f(n)=f(n-1)+f(n-2)
/*
#include<stdio.h>
int main()
{
	int a = 1;
	int b = 1;
	int c;
	int i = 2;
	int j = 0;
	scanf("%d", &j);
	if (j <= 2)
	{
		c = 1;
	}
	while (i<j)
	{
		c = a + b; 
		a = b;
		b = c;
		i++;
	}
	printf("%d", c);
}
*/


//汉诺塔程序
/*
#include<stdio.h>

void move(char a, char b)
{
	static int i = 0;
	i++;
	printf("第%d次把%c柱上的盘子移到%c上\n", i, a, b);
}

void hanoi(int n, char a, char b, char c)
{
	if (n == 1)
	{
		move(a, c);
	}
	else if (n > 1)
	{
		hanoi(n - 1, a, c, b);//将n-1个盘子先到c再到b（从小到大从上到下）
		move(a, c);//把a上面最大的盘子移到c上
		hanoi(n - 1, b, a, c);//将b上面的n-1个盘子移到a上，然后把b上面最大的移动到c上
	}
}
int main()
{
	int n = 0;
	printf("请输入盘子数目");
	scanf("%d", &n);
	char x = 'a';
	char y = 'b';
	char z = 'c';
	hanoi(n, x, y, z);
}
*/


//青蛙跳台问题一次只能跳二步或者一步请问有几种跳法f(n)=f(n-1)+f(n-2)
/*
#include<stdio.h>

int tiaotai(int i)
{
	if (i <= 2)
	{
		return i;
	}
	else
	{
		return tiaotai(i - 1) + tiaotai(i - 2);
	}
}
int main()
{
	int i = 0;
	int j = 0;
	printf("请输入跳的台阶高度\n");
	scanf("%d", &i);
	j = tiaotai(i);
	printf("%d", j);
}
*/
